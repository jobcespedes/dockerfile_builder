---
# Builder: docker or podman
dockerfile_builder: docker
dockerfile_builder_use_buildx: false
dockerfile_builder_buildx_multiplatform_cache: false
dockerfile_builders:
  - podman
  - docker

# Builder template
dockerfile_builder_template: Dockerfile.j2
dockerfile_builder_dockerfile: Dockerfile

# Image name (Ex. "repository/name:tag". It is also the path to
# its context
dockerfile_builder_image: false
dockerfile_builder_image_base: "{{ dockerfile_builder_image.split('@')[0].split(':')[0] }}"

# Image source
dockerfile_builder_src: "{{ dockerfile_builder_image }}"

# Dest directory for image context
dockerfile_builder_path:
  "{{ 'build/' + dockerfile_builder_image }}"

# Source template for image Dockerfile
dockerfile_builder_template_src: >-
  "{{ dockerfile_builder_src +
  '/' + dockerfile_builder_template }}"

# Dest template for image Dockerfile
dockerfile_builder_template_dest: >-
    "{{ dockerfile_builder_path +
    '/' + dockerfile_builder_dockerfile }}"

# omit source sync
dockerfile_builder_src_omit: false

# omit template generation
dockerfile_builder_template_omit: false

# omit if templates do not change dest
dockerfile_builder_build_omit_when_no_sync: false

# debug build
dockerfile_builder_debug: false

# login and push
# dockerfile_builder_push: true
# dockerfile_builder_username: myusername
# dockerfile_builder_password: mypassword

# buildx
dockerfile_builder_buildx_cache_from_arg: "{{ dockerfile_builder_buildx_cache_image_name }}"
dockerfile_builder_buildx_cache_to_mode: inline
dockerfile_builder_buildx_cache_to_mode_args:
  inline: "type=inline"
  min: "type=registry,mode=min,ref={{ dockerfile_builder_buildx_cache_image_name }}"
  max: "type=registry,mode=max,ref={{ dockerfile_builder_buildx_cache_image_name }}"
dockerfile_builder_buildx_cache_to_arg:
  "{{ dockerfile_builder_buildx_cache_to_mode_args[dockerfile_builder_buildx_cache_to_mode] }}"
dockerfile_builder_buildx_cache_image_name: "{{ dockerfile_builder_image + ':'
  + dockerfile_builder_buildx_cache_image_extra_tag }}"
dockerfile_builder_buildx_cache_image_extra_tag:
  "{{ 'build-cache' + '-' + dockerfile_builder_buildx_cache_image_extra_tag_id
  if dockerfile_builder_buildx_cache_image_extra_tag_id is defined else 'build-cache' }}"

# Other
dockerfile_builder_template_files: "{{ (lookup('pipe', 'find ' + dockerfile_builder_src + ' -type f -name \"*.j2\"') | default('')).split('\n') }}"
dockerfile_builder_excluded_files: []
dockerfile_builder_rsync_excluded_files: "{{ dockerfile_builder_template_files + dockerfile_builder_excluded_files }}"
dockerfile_builder_rsync_opts: "{%- if dockerfile_builder_rsync_excluded_files -%}
  --exclude=*.j2
  {%- for template_file in dockerfile_builder_rsync_excluded_files -%}
  ,--exclude={{ template_file | regex_replace('^' + dockerfile_builder_src , '') | splitext | first }}{%- endfor -%}{%- endif -%}"
