---
- when: dockerfile_builder_image is defined and dockerfile_builder_image
  block:
    - debug:
        msg: "building: {{ dockerfile_builder_image }}"

    - name: check valid builder
      when: assertion_dockerfile_builder | default(false)
      assert:
        that: dockerfile_builder in dockerfile_builders

    - name: check image build directory
      stat:
        path: "{{ dockerfile_builder_path }}"
      register: dockerfile_builder_check_dir

    - name: create image build directory
      when: not dockerfile_builder_check_dir.stat.exists
      file:
        dest: "{{ dockerfile_builder_path }}"
        state: directory
        mode: '0755'

    - name: sync build directory and templates files
      when: dockerfile_builder_src != dockerfile_builder_path
      block:
        - name: sync image build directory
          when: not dockerfile_builder_src_omit
          register: dockerfile_builder_copy_build
          synchronize:
            src: "{{ dockerfile_builder_src }}/"
            dest: "{{ dockerfile_builder_path }}/"
            delete: true
            checksum: "{{ dockerfile_builder_sync_checksum | default(omit) }}"
            times: "{{ false if dockerfile_builder_sync_checksum |
              default(false) else omit }}"
            rsync_opts: "{{ dockerfile_builder_rsync_opts.split(',') if dockerfile_builder_rsync_opts else omit }}"

        - name: sync templates in image build directory
          when:
            - dockerfile_builder_template_files is defined and dockerfile_builder_template_files
            - not dockerfile_builder_template_omit
          register: dockerfile_builder_template_sync
          template:
            src: "{{ item }}"
            dest: "{{ item | regex_replace('^' + dockerfile_builder_src , dockerfile_builder_path) | splitext | first }}"
            mode: "{{ lookup('pipe', 'stat -c \"%a\" ' + item ) }}"
          loop: "{{ dockerfile_builder_template_files }}"

    - when:
        - dockerfile_builder_copy_build is defined
        - dockerfile_builder_copy_build is not changed
        - dockerfile_builder_build_omit_when_no_sync
      block:
        - name: omit build because there are no changes
          set_fact:
            dockerfile_builder_build_omit: true

    - name: force build
      when:
        - not dockerfile_builder_check_dir.stat.exists or
          (dockerfile_builder_copy_build is defined and dockerfile_builder_copy_build is changed) or
          (dockerfile_builder_template_sync is defined and dockerfile_builder_template_sync is changed)
      set_fact:
        dockerfile_builder_force_source: true
        dockerfile_builder_force: true

    - name: image build
      when: not dockerfile_builder_build_omit | default(false)
      include_tasks: "{{ 'docker-buildx' if dockerfile_builder_use_buildx | bool else dockerfile_builder }}.yml"
